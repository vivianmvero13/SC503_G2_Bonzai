ALTER SESSION SET "_ORACLE_SCRIPT"=TRUE;



--Crear el tablespace 
CREATE TABLESPACE TBL_TERAPIA 
DATAFILE 'C:\app\s1111\product\18.0.0\oradata\xe\TBL_TERAPIA.DBF' 
SIZE 100M 
AUTOEXTEND ON NEXT 50M MAXSIZE 500M; 


--Creación de Perfil 
CREATE PROFILE PERFIL_TERAPIA LIMIT 
SESSIONS_PER_USER 3 
CPU_PER_SESSION 10000 
CPU_PER_CALL 1 
CONNECT_TIME UNLIMITED 
IDLE_TIME 30 
LOGICAL_READS_PER_SESSION DEFAULT 
LOGICAL_READS_PER_CALL DEFAULT 
PRIVATE_SGA 20M 
FAILED _LOGIN_ATTEMPTS 5 
PASSWORD_LIFE_TIME 90 
PASSWORD_REUSE_TIME 30 
PASSWORD_REUSE_MAX UNLIMITED 
PASSWORD_LOCK_TIME DAFAULT 
PASSWORD_GRACE_TIME 5 
PASSWORD_VERIFY_FUNCTION NULL; 


--Crear usuario y asignar rol ADMIN 
CREATE USER USR_ADAM IDENTIFIED BY "ad1" 
DEFAULT TABLESPACE TBL_TERAPIA
PROFILE PERFIL_TERAPIA
TEMPORARY TABLESPACE TEMP
QUOTA UNLIMITED ON TBL_TERAPIA;

GRANT CONNECT, RESOURCE TO USR_ADAM;

CREATE ROLE RL_ADMIN;
GRANT CREATE SESSION, ALTER, DELETE, INSERT, SELECT ANY TABLE ON USR_ADAM TO RL_ADMIN;
COMMIT;


--Crear usuario y asignar rol DIRECTOR 
CREATE USER USR_DIANA IDENTIFIED BY "di1" 
DEFAULT TABLESPACE TBL_TERAPIA
PROFILE PERFIL_TERAPIA
TEMPORARY TABLESPACE TEMP
QUOTA UNLIMITED ON TBL_TERAPIA;

GRANT CONNECT, RESOURCE TO USR_DIANA;

--Asignar privilegios para consultas y reportes: 
CREATE ROLE RL_DIRECTOR;
GRANT CREATE SESSION, INSERT, SELECT ANY TABLE ON USR_DIANA TO RL_DIRECTOR; 
COMMIT;


--Crear usuario y asignar rol TERAPEUTA
CREATE USER USR_TERRY IDENTIFIED BY "te1" 
DEFAULT TABLESPACE TBL_TERAPIA
PROFILE PERFIL_TERAPIA
TEMPORARY TABLESPACE TEMP
QUOTA UNLIMITED ON TBL_TERAPIA;

GRANT CONNECT, RESOURCE TO USR_TERRY;

--Asignar privilegios para consultar expedientes y citas: 
CREATE ROLE RL_TERAPEUTA;
GRANT SELECT, INSERT ON USR_TERRY.EXPEDIENTES TO RL_TERAPEUTA; 
GRANT SELECT, INSERT ON USR_TERRY.CITAS TO RL_TERAPEUTA; 
COMMIT; 




--Crear Índices Iniciales 
CREATE INDEX IDX_CLIENTE_NOMBRE ON CLIENTE(NOMBRE); 
CREATE INDEX IDX_CITA_FECHA ON CITAS(FECHA_CITA); 
CREATE INDEX IDX_PAGO_CLIENTE ON PAGOS(CLIENTE_ID); 



--Crear e insertar valores aleatorias a la tabla de CLIENTE
CREATE TABLE CLIENTE(
    ID_CLIENTE NUMBER(20)PRIMARY KEY,
    NOMBRE VARCHAR2(50)NOT NULL,
    APELLIDO VARCHAR2(50)NOT NULL,
    FECHA_NACIMIENTO DATE,
    CONTACTO VARCHAR(30),
    DIRECCION VARCHAR(50),
    VALORACION VARCHAR(50)
);


INSERT INTO CLIENTE (ID_CLIENTE, NOMBRE, APELLIDO, FECHA_NACIMIENTO, CONTACTO, DIRECCION, VALORACION)
SELECT LEVEL,
       INITCAP(DBMS_RANDOM.STRING('L', 8)),  -- Nombre aleatorio
       INITCAP(DBMS_RANDOM.STRING('L', 10)), -- Apellido aleatorio
       TRUNC(SYSDATE - DBMS_RANDOM.VALUE(90, 25550)),  -- Fecha entre 0 y 70 años atrás
       '+506 ' || TRUNC(DBMS_RANDOM.VALUE(600000000, 899999999)), -- Número de contacto 
       'Calle ' || TRUNC(DBMS_RANDOM.VALUE(1, 200)) || ' # ' || TRUNC(DBMS_RANDOM.VALUE(1, 100)), -- Dirección ficticia
       CASE 
           WHEN MOD(LEVEL, 3) = 0 THEN 'Categoria-A'
           WHEN MOD(LEVEL, 3) = 1 THEN 'Categoria-B'
           ELSE 'Categoria-C'
       END -- Valoración aleatoria
FROM DUAL
CONNECT BY LEVEL <= 55;



--Crear e insertar valores aleatorias a la tabla de TERAPEUTA
CREATE TABLE TERAPEUTA(
    ID_TERAPEUTA NUMBER(20)PRIMARY KEY,
    CODIGO_TERAPEUTA VARCHAR(20)NOT NULL,
    NOMBRE VARCHAR2(50)NOT NULL,
    APELLIDO VARCHAR2(50) NOT NULL,
    ESPECIALIDAD VARCHAR(20),
    CONTACTO VARCHAR(15)
); 

INSERT INTO TERAPEUTA (ID_TERAPEUTA, CODIGO_TERAPEUTA, NOMBRE, APELLIDO, ESPECIALIDAD, CONTACTO)
SELECT LEVEL,
       'T-' || TRUNC(DBMS_RANDOM.VALUE(1000, 9999)), -- Código aleatorio
       INITCAP(DBMS_RANDOM.STRING('L', 7)), -- Nombre aleatorio
       INITCAP(DBMS_RANDOM.STRING('L', 9)), -- Apellido aleatorio
       CASE 
           WHEN MOD(LEVEL, 4) = 0 THEN 'Fisioterapia'
           WHEN MOD(LEVEL, 4) = 1 THEN 'Terapia Lenguaje'
           ELSE 'Terapia Ocupacional'
       END, -- Especialidad aleatoria
       '+506 ' || TRUNC(DBMS_RANDOM.VALUE(600000000, 899999999)) -- Contacto aleatorio
FROM DUAL
CONNECT BY LEVEL <= 55;



--Crear e insertar valores aleatorias a la tabla de TERAPIA
CREATE TABLE TERAPIA(
    ID_TERAPIA NUMBER(20)PRIMARY KEY,
    TIPO_TERAPIA VARCHAR(30),
    SESION NUMBER(20),
    COSTO NUMBER(20)
);  
    
    
INSERT INTO TERAPIA (ID_TERAPIA, TIPO_TERAPIA, SESION, COSTO)
SELECT LEVEL,
       CASE 
           WHEN MOD(LEVEL, 3) = 0 THEN 'Terapia Ocupacional'
           WHEN MOD(LEVEL, 3) = 1 THEN 'Terapia Lenguaje'
           ELSE 'Terapia Fisica'
       END,
       TRUNC(DBMS_RANDOM.VALUE(1, 10)), -- Número de sesiones entre 1 y 10
       ROUND(DBMS_RANDOM.VALUE(20, 200), 2) -- Costo aleatorio entre $20 y $200
FROM DUAL
CONNECT BY LEVEL <= 55;



--Crear e insertar valores aleatorias a la tabla de CITAS
CREATE TABLE CITAS(
    ID_CITA NUMBER(20)PRIMARY KEY,
    ID_CLIENTE NUMBER(20)REFERENCES CLIENTE(ID_CLIENTE),
    ID_TERAPEUTA NUMBER(20)REFERENCES TERAPEUTA(ID_TERAPEUTA),
    FECHA_CITA DATE NOT NULL,
    HORA_CITA TIMESTAMP NOT NULL,
    ESTADO VARCHAR2(100)
);


INSERT INTO CITAS (ID_CITA, ID_CLIENTE, ID_TERAPEUTA, FECHA_CITA, HORA_CITA, ESTADO)
SELECT LEVEL,
       TRUNC(DBMS_RANDOM.VALUE(1, 100)), -- Cliente aleatorio (de 1 a 100)
       TRUNC(DBMS_RANDOM.VALUE(1, 20)), -- Terapeuta aleatorio (de 1 a 20)
       TRUNC(SYSDATE - DBMS_RANDOM.VALUE(-30, 60)), -- Fechas pasadas y futuras
       TO_TIMESTAMP(TRUNC(SYSDATE - DBMS_RANDOM.VALUE(-30, 60)) + DBMS_RANDOM.VALUE(8/24, 18/24)), -- Horas entre 8 AM y 6 PM
       CASE 
           WHEN MOD(LEVEL, 3) = 0 THEN 'Pendiente'
           WHEN MOD(LEVEL, 3) = 1 THEN 'Confirmada'
           ELSE 'Cancelada'
       END
FROM DUAL
CONNECT BY LEVEL <= 100;




--Crear e insertar valores aleatorias a la tabla de PAGOS
CREATE TABLE PAGOS(
    ID_PAGO NUMBER(20)PRIMARY KEY,
    ID_CLIENTE NUMBER(20)REFERENCES CLIENTE(ID_CLIENTE),
    MONTO NUMBER(50)NOT NULL;
    METODO_PAGO VARCHAR(30),
    FECHA_PAGO DATE NOT NULL,
    ESTADO_PAGO VARCHAR(30)
);

INSERT INTO PAGOS (ID_PAGO, ID_CLIENTE, MONTO, METODO_PAGO, FECHA_PAGO, ESTADO_PAGO)
SELECT LEVEL,
       TRUNC(DBMS_RANDOM.VALUE(1, 100)), -- Cliente aleatorio
       ROUND(DBMS_RANDOM.VALUE(20, 500), 2), -- Monto entre $20 y $500
       CASE 
           WHEN MOD(LEVEL, 3) = 0 THEN 'Efectivo'
           WHEN MOD(LEVEL, 3) = 1 THEN 'Tarjeta'
           ELSE 'Transferencia'
       END,
       TRUNC(SYSDATE - DBMS_RANDOM.VALUE(0, 30)), -- Últimos 30 días
       CASE 
           WHEN MOD(LEVEL, 4) = 0 THEN 'Pagado'
           WHEN MOD(LEVEL, 4) = 1 THEN 'Pendiente'
           ELSE 'Vencido'
       END
FROM DUAL
CONNECT BY LEVEL <= 100;


--Crear e insertar valores aleatorias a la tabla de EXPEDIENTES
CREATE TABLE EXPEDIENTES(
    ID_EXPEDIENTE NUMBER(20)PRIMARY KEY,
    ID_CLIENTE NUMBER(20)REFERENCES CLIENTE(ID_CLIENTE),
    FECHA DATE NOT NULL,
    DESCRIPCION VARCHAR(50),
    PROGRESO VARCHAR(50)
);


INSERT INTO EXPEDIENTES (ID_EXPEDIENTE, ID_CLIENTE, FECHA, DESCRIPCION, PROGRESO)
SELECT LEVEL,
       TRUNC(DBMS_RANDOM.VALUE(1, 100)), -- Cliente aleatorio
       TRUNC(SYSDATE - DBMS_RANDOM.VALUE(10, 100)), -- Fechas en los últimos 3 meses
       'Sesión ' || TRUNC(DBMS_RANDOM.VALUE(1, 10)), -- Descripción ficticia
       CASE 
           WHEN MOD(LEVEL, 3) = 0 THEN 'Mejorando'
           WHEN MOD(LEVEL, 3) = 1 THEN 'Estable'
           ELSE 'Recaída'
       END
FROM DUAL
CONNECT BY LEVEL <= 100;

COMMIT;
